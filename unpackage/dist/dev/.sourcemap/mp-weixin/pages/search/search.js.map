{"version":3,"file":"search.js","sources":["pages/search/search.vue","F:/HBuilderX.4.75.2025071105/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc2VhcmNoL3NlYXJjaC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <!-- 搜索框 -->\r\n    <view class=\"search-section\">\r\n      <view class=\"search-bar\">\r\n        <view class=\"search-input-container\">\r\n          <input \r\n            v-model=\"searchQuery\" \r\n            placeholder=\"输入中文或意大利语单词...\" \r\n            class=\"search-input\"\r\n            @input=\"onSearchInput\"\r\n            confirm-type=\"search\"\r\n            @confirm=\"performSearch\"\r\n          />\r\n          <button class=\"search-btn\" @click=\"performSearch\">\r\n            <text class=\"search-icon\">🔍</text>\r\n          </button>\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 搜索提示 -->\r\n      <view class=\"search-tips\" v-if=\"!searchQuery\">\r\n        <text class=\"tip-text\">💡 支持中文和意大利语搜索</text>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 搜索结果 -->\r\n    <view class=\"results-section\" v-if=\"searchResults.length > 0\">\r\n      <view class=\"results-header\">\r\n        <text class=\"results-title\">搜索结果</text>\r\n        <text class=\"results-count\">共{{searchResults.length}}条</text>\r\n      </view>\r\n      \r\n      <view class=\"results-list\">\r\n        <view \r\n          v-for=\"word in searchResults\" \r\n          :key=\"word.id\"\r\n          class=\"word-item\"\r\n          @click=\"goToWordDetail(word)\"\r\n        >\r\n          <view class=\"word-main\">\r\n            <view class=\"word-text\">{{ word.word }}</view>\r\n            <view class=\"word-pos\">{{ posMap[word.pos] }}</view>\r\n          </view>\r\n          <view class=\"word-meaning\">{{ word.meaning }}</view>\r\n          <view class=\"word-status\">\r\n            <view class=\"status-dot\" :class=\"{ active: isWordLearned(word.id) }\"></view>\r\n            <text class=\"status-text\">{{ isWordLearned(word.id) ? '已学' : '未学' }}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 无搜索结果 -->\r\n    <view class=\"no-results\" v-if=\"hasSearched && searchResults.length === 0\">\r\n      <view class=\"no-results-icon\">🔍</view>\r\n      <view class=\"no-results-title\">未找到相关单词</view>\r\n      <view class=\"no-results-desc\">请尝试其他搜索词汇</view>\r\n    </view>\r\n    \r\n    <!-- 搜索历史 -->\r\n    <view class=\"history-section\" v-if=\"!hasSearched && searchHistory.length > 0\">\r\n      <view class=\"history-header\">\r\n        <text class=\"history-title\">搜索历史</text>\r\n        <button class=\"clear-history-btn\" @click=\"clearHistory\">清空</button>\r\n      </view>\r\n      <view class=\"history-list\">\r\n        <view \r\n          v-for=\"(item, index) in searchHistory\" \r\n          :key=\"index\"\r\n          class=\"history-item\"\r\n          @click=\"searchFromHistory(item)\"\r\n        >\r\n          <text class=\"history-text\">{{ item }}</text>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 热门词汇推荐 -->\r\n    <view class=\"recommend-section\" v-if=\"!hasSearched && searchHistory.length === 0\">\r\n      <view class=\"recommend-header\">\r\n        <text class=\"recommend-title\">推荐词汇</text>\r\n      </view>\r\n      <view class=\"recommend-list\">\r\n        <view \r\n          v-for=\"word in recommendWords\" \r\n          :key=\"word.id\"\r\n          class=\"recommend-item\"\r\n          @click=\"goToWordDetail(word)\"\r\n        >\r\n          <view class=\"recommend-word\">{{ word.word }}</view>\r\n          <view class=\"recommend-meaning\">{{ word.meaning }}</view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport { \r\n  getCurrentBookWords, \r\n  getCurrentBookLearnedWords,\r\n  posMap\r\n} from '@/utils/bookData.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      searchResults: [],\r\n      hasSearched: false,\r\n      searchHistory: [],\r\n      recommendWords: [],\r\n      allWords: [],\r\n      learnedWords: [],\r\n      posMap\r\n    }\r\n  },\r\n  onLoad() {\r\n    this.loadData()\r\n    this.loadSearchHistory()\r\n    this.loadRecommendWords()\r\n  },\r\n  methods: {\r\n    loadData() {\r\n      this.allWords = getCurrentBookWords()\r\n      this.learnedWords = getCurrentBookLearnedWords()\r\n    },\r\n    \r\n    loadSearchHistory() {\r\n      try {\r\n        const history = uni.getStorageSync('search_history') || []\r\n        this.searchHistory = history.slice(0, 10) // 最多显示10条历史记录\r\n      } catch (e) {\r\n        this.searchHistory = []\r\n      }\r\n    },\r\n    \r\n    loadRecommendWords() {\r\n      // 随机推荐一些单词\r\n      const shuffled = [...this.allWords].sort(() => 0.5 - Math.random())\r\n      this.recommendWords = shuffled.slice(0, 20)\r\n    },\r\n    \r\n    onSearchInput() {\r\n      // 实时搜索\r\n      if (this.searchQuery.trim()) {\r\n        this.performSearch()\r\n      } else {\r\n        this.searchResults = []\r\n        this.hasSearched = false\r\n      }\r\n    },\r\n    \r\n    performSearch() {\r\n      const query = this.searchQuery.trim()\r\n      if (!query) {\r\n        this.searchResults = []\r\n        this.hasSearched = false\r\n        return\r\n      }\r\n      \r\n      this.hasSearched = true\r\n      \r\n      // 搜索逻辑：同时搜索意大利语单词和中文意思\r\n      const results = this.allWords.filter(word => {\r\n        const wordMatch = word.word.toLowerCase().includes(query.toLowerCase())\r\n        const meaningMatch = word.meaning.includes(query)\r\n        return wordMatch || meaningMatch\r\n      })\r\n      \r\n      // 按相关度排序（精确匹配优先）\r\n      this.searchResults = results.sort((a, b) => {\r\n        const aWordExact = a.word.toLowerCase() === query.toLowerCase()\r\n        const bWordExact = b.word.toLowerCase() === query.toLowerCase()\r\n        const aMeaningExact = a.meaning === query\r\n        const bMeaningExact = b.meaning === query\r\n        \r\n        if (aWordExact && !bWordExact) return -1\r\n        if (!aWordExact && bWordExact) return 1\r\n        if (aMeaningExact && !bMeaningExact) return -1\r\n        if (!aMeaningExact && bMeaningExact) return 1\r\n        \r\n        return 0\r\n      })\r\n      \r\n      // 保存搜索历史\r\n      this.saveSearchHistory(query)\r\n    },\r\n    \r\n    saveSearchHistory(query) {\r\n      try {\r\n        let history = uni.getStorageSync('search_history') || []\r\n        \r\n        // 移除重复项\r\n        history = history.filter(item => item !== query)\r\n        \r\n        // 添加到开头\r\n        history.unshift(query)\r\n        \r\n        // 限制历史记录数量\r\n        history = history.slice(0, 50)\r\n        \r\n        uni.setStorageSync('search_history', history)\r\n        this.searchHistory = history.slice(0, 10)\r\n      } catch (e) {\r\n        console.error('保存搜索历史失败:', e)\r\n      }\r\n    },\r\n    \r\n    searchFromHistory(query) {\r\n      this.searchQuery = query\r\n      this.performSearch()\r\n    },\r\n    \r\n    clearHistory() {\r\n      uni.showModal({\r\n        title: '确认',\r\n        content: '确定要清空搜索历史吗？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            try {\r\n              uni.removeStorageSync('search_history')\r\n              this.searchHistory = []\r\n              uni.showToast({\r\n                title: '已清空历史记录',\r\n                icon: 'success'\r\n              })\r\n            } catch (e) {\r\n              console.error('清空历史记录失败:', e)\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    \r\n    isWordLearned(wordId) {\r\n      return this.learnedWords.some(word => word.id === wordId)\r\n    },\r\n    \r\n    goToWordDetail(word) {\r\n      uni.navigateTo({\r\n        url: `/pages/wordDetail/wordDetail?wordId=${word.id}&fromPage=search`\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 40rpx;\r\n}\r\n\r\n.search-section {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.search-bar {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20rpx;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  background: #f8f9fa;\r\n  border: 2rpx solid transparent;\r\n  border-radius: 12rpx;\r\n  padding: 20rpx;\r\n  font-size: 32rpx;\r\n  color: #333;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #667eea;\r\n  outline: none;\r\n}\r\n\r\n.search-btn {\r\n  width: 80rpx;\r\n  height: 80rpx;\r\n  background: #667eea;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 40rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.search-icon {\r\n  font-size: 32rpx;\r\n}\r\n\r\n.search-tips {\r\n  text-align: center;\r\n  margin-top: 20rpx;\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.tip-text {\r\n  font-size: 24rpx;\r\n}\r\n\r\n.results-section {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.results-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30rpx;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 2rpx solid #f0f0f0;\r\n}\r\n\r\n.results-title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.results-count {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n}\r\n\r\n.results-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.word-item {\r\n  background: #f8f9fa;\r\n  border-radius: 12rpx;\r\n  padding: 24rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10rpx;\r\n  position: relative;\r\n}\r\n\r\n.word-main {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20rpx;\r\n}\r\n\r\n.word-text {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.word-pos {\r\n  background: #e3f2fd;\r\n  color: #1976d2;\r\n  padding: 4rpx 12rpx;\r\n  border-radius: 8rpx;\r\n  font-size: 20rpx;\r\n}\r\n\r\n.word-meaning {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-top: 8rpx;\r\n}\r\n\r\n.word-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n  position: absolute;\r\n  top: 24rpx;\r\n  right: 24rpx;\r\n}\r\n\r\n.status-dot {\r\n  width: 16rpx;\r\n  height: 16rpx;\r\n  border-radius: 50%;\r\n  background: #ddd;\r\n}\r\n\r\n.status-dot.active {\r\n  background: #4CAF50;\r\n}\r\n\r\n.status-text {\r\n  font-size: 20rpx;\r\n  color: #666;\r\n}\r\n\r\n.no-results {\r\n  text-align: center;\r\n  padding: 100rpx 40rpx;\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.no-results-icon {\r\n  font-size: 120rpx;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.no-results-title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.no-results-desc {\r\n  font-size: 28rpx;\r\n  opacity: 0.7;\r\n}\r\n\r\n.history-section, .recommend-section {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.history-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30rpx;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 2rpx solid #f0f0f0;\r\n}\r\n\r\n.history-title, .recommend-title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.clear-history-btn {\r\n  background: #ff4757;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 20rpx;\r\n  padding: 12rpx 24rpx;\r\n  font-size: 24rpx;\r\n}\r\n\r\n.history-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20rpx;\r\n}\r\n\r\n.history-item {\r\n  background: #f8f9fa;\r\n  border-radius: 20rpx;\r\n  padding: 16rpx 24rpx;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.recommend-header {\r\n  margin-bottom: 30rpx;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 2rpx solid #f0f0f0;\r\n}\r\n\r\n.recommend-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20rpx;\r\n}\r\n\r\n.recommend-item {\r\n  background: #f8f9fa;\r\n  border-radius: 12rpx;\r\n  padding: 20rpx;\r\n  width: 48%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8rpx;\r\n}\r\n\r\n.recommend-word {\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.recommend-meaning {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n}\r\n</style> ","import MiniProgramPage from 'G:/常嘉硕/大学/中南大学/意大利语/WechatMiniTest/记意 Parli/pages/search/search.vue'\nwx.createPage(MiniProgramPage)"],"names":["posMap","getCurrentBookWords","getCurrentBookLearnedWords","uni"],"mappings":"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"}