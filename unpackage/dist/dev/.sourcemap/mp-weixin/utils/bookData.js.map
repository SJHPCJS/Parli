{"version":3,"file":"bookData.js","sources":["utils/bookData.js"],"sourcesContent":["// utils/bookData.js - Âü∫‰∫é45893ÂÆåÊï¥ËØçÂÖ∏ÁöÑÊï∞ÊçÆ\r\n\r\nimport { wordList, posMap, getWordsByPos, getWordsByDifficulty } from './wordData.js'\r\n\r\n// ‰π¶Á±çÊï∞ÊçÆ - Âè™Êúâ‰∏ÄÊú¨ÂÆåÊï¥ÁöÑËØçÂÖ∏\r\nexport const bookList = [\r\n  {\r\n    id: 1,\r\n    title: 'ÊÑèÂ§ßÂà©ËØ≠ËØçÂÖ∏',\r\n    subtitle: '45893ÂÆåÊï¥ËØçÂÖ∏',\r\n    cover: 'üìñ',\r\n    description: 'ÂåÖÂê´44592‰∏™ËØçÊ±áÁöÑÂÆåÊï¥ÊÑèÂ§ßÂà©ËØ≠-‰∏≠ÊñáËØçÂÖ∏ÔºåÊùÉÂ®ÅÂÖ®Èù¢',\r\n    difficulty: 'ÂÖ®ÈÉ®',\r\n    wordCount: wordList.length,\r\n    color: '#6c5ce7'\r\n  }\r\n]\r\n\r\n// ‰π¶Á±çÁöÑÂçïËØçÊï∞ÊçÆ - Âè™ÊúâÂÆåÊï¥ËØçÂÖ∏\r\nexport const bookWords = {\r\n  1: wordList  // ÂÖ®ÈÉ®ËØçÊ±á\r\n}\r\n\r\n// Ëé∑ÂèñÂΩìÂâçÂ≠¶‰π†ÁöÑ‰π¶Á±ç\r\nexport function getCurrentBook() {\r\n  try {\r\n    const currentBookId = uni.getStorageSync('current_book_id') || 1\r\n    return bookList.find(book => book.id === currentBookId) || bookList[0]\r\n  } catch (e) {\r\n    return bookList[0]\r\n  }\r\n}\r\n\r\n// ËÆæÁΩÆÂΩìÂâçÂ≠¶‰π†ÁöÑ‰π¶Á±ç\r\nexport function setCurrentBook(bookId) {\r\n  try {\r\n    uni.setStorageSync('current_book_id', bookId)\r\n  } catch (e) {\r\n    console.error('ËÆæÁΩÆÂΩìÂâç‰π¶Á±çÂ§±Ë¥•:', e)\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñÂΩìÂâç‰π¶Á±çÁöÑÂçïËØç\r\nexport function getCurrentBookWords() {\r\n  const currentBook = getCurrentBook()\r\n  return bookWords[currentBook.id] || []\r\n}\r\n\r\n// Ëé∑Âèñ‰π¶Á±çÂ≠¶‰π†ËøõÂ∫¶\r\nexport function getBookProgress(bookId) {\r\n  try {\r\n    const progressKey = `book_progress_${bookId}`\r\n    const progress = uni.getStorageSync(progressKey) || {\r\n      learned: 0,\r\n      total: bookWords[bookId] ? bookWords[bookId].length : 0,\r\n      percentage: 0\r\n    }\r\n    return progress\r\n  } catch (e) {\r\n    return {\r\n      learned: 0,\r\n      total: bookWords[bookId] ? bookWords[bookId].length : 0,\r\n      percentage: 0\r\n    }\r\n  }\r\n}\r\n\r\n// ‰øùÂ≠ò‰π¶Á±çÂ≠¶‰π†ËøõÂ∫¶\r\nexport function saveBookProgress(bookId, progress) {\r\n  try {\r\n    const progressKey = `book_progress_${bookId}`\r\n    uni.setStorageSync(progressKey, progress)\r\n  } catch (e) {\r\n    console.error('‰øùÂ≠ò‰π¶Á±çËøõÂ∫¶Â§±Ë¥•:', e)\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñÂΩìÂâç‰π¶Á±çÁöÑÈîôÈ¢ò\r\nexport function getCurrentBookWrongWords() {\r\n  const currentBook = getCurrentBook()\r\n  try {\r\n    const wrongWordsKey = `wrong_words_book_${currentBook.id}`\r\n    const wrongWordIds = uni.getStorageSync(wrongWordsKey) || []\r\n    const bookWordsData = bookWords[currentBook.id] || []\r\n    return wrongWordIds.map(id => bookWordsData.find(word => word.id === id)).filter(Boolean)\r\n  } catch (e) {\r\n    return []\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñÂΩìÂâç‰π¶Á±çÁöÑÂ∑≤Â≠¶ËØçÊ±á\r\nexport function getCurrentBookLearnedWords() {\r\n  const currentBook = getCurrentBook()\r\n  try {\r\n    const learnedWordsKey = `learned_words_book_${currentBook.id}`\r\n    const learnedWordIds = uni.getStorageSync(learnedWordsKey) || []\r\n    const bookWordsData = bookWords[currentBook.id] || []\r\n    return learnedWordIds.map(id => bookWordsData.find(word => word.id === id)).filter(Boolean)\r\n  } catch (e) {\r\n    return []\r\n  }\r\n}\r\n\r\n// Ê∑ªÂä†ÈîôÈ¢òÂà∞ÂΩìÂâç‰π¶Á±ç\r\nexport function addWrongWordToCurrentBook(wordId) {\r\n  const currentBook = getCurrentBook()\r\n  try {\r\n    const wrongWordsKey = `wrong_words_book_${currentBook.id}`\r\n    const wrongWordIds = uni.getStorageSync(wrongWordsKey) || []\r\n    if (!wrongWordIds.includes(wordId)) {\r\n      wrongWordIds.push(wordId)\r\n      uni.setStorageSync(wrongWordsKey, wrongWordIds)\r\n    }\r\n  } catch (e) {\r\n    console.error('Ê∑ªÂä†ÈîôÈ¢òÂ§±Ë¥•:', e)\r\n  }\r\n}\r\n\r\n// ÁßªÈô§ÂΩìÂâç‰π¶Á±çÁöÑÈîôÈ¢ò\r\nexport function removeWrongWordFromCurrentBook(wordId) {\r\n  const currentBook = getCurrentBook()\r\n  try {\r\n    const wrongWordsKey = `wrong_words_book_${currentBook.id}`\r\n    const wrongWordIds = uni.getStorageSync(wrongWordsKey) || []\r\n    const index = wrongWordIds.indexOf(wordId)\r\n    if (index > -1) {\r\n      wrongWordIds.splice(index, 1)\r\n      uni.setStorageSync(wrongWordsKey, wrongWordIds)\r\n    }\r\n  } catch (e) {\r\n    console.error('ÁßªÈô§ÈîôÈ¢òÂ§±Ë¥•:', e)\r\n  }\r\n}\r\n\r\n// Ê∑ªÂä†Â∑≤Â≠¶ËØçÊ±áÂà∞ÂΩìÂâç‰π¶Á±ç\r\nexport function addLearnedWordToCurrentBook(wordId) {\r\n  const currentBook = getCurrentBook()\r\n  try {\r\n    const learnedWordsKey = `learned_words_book_${currentBook.id}`\r\n    const learnedWordIds = uni.getStorageSync(learnedWordsKey) || []\r\n    if (!learnedWordIds.includes(wordId)) {\r\n      learnedWordIds.push(wordId)\r\n      uni.setStorageSync(learnedWordsKey, learnedWordIds)\r\n    }\r\n  } catch (e) {\r\n    console.error('Ê∑ªÂä†Â∑≤Â≠¶ËØçÊ±áÂ§±Ë¥•:', e)\r\n  }\r\n}\r\n\r\n// ‰ªéÂΩìÂâç‰π¶Á±ç‰∏≠Ëé∑ÂèñÈöèÊú∫ËØçÊ±áÁî®‰∫éÊµãÈ™å\r\nexport function getRandomWordsForQuiz(count = 10) {\r\n  const currentBookWords = getCurrentBookWords()\r\n  if (currentBookWords.length === 0) return []\r\n  \r\n  const shuffled = [...currentBookWords].sort(() => 0.5 - Math.random())\r\n  return shuffled.slice(0, count)\r\n}\r\n\r\n// Ê†πÊçÆËØçÊÄßÁ≠õÈÄâÂΩìÂâç‰π¶Á±çÁöÑËØçÊ±á\r\nexport function getCurrentBookWordsByPos(pos) {\r\n  const currentBookWords = getCurrentBookWords()\r\n  return currentBookWords.filter(word => word.pos === pos)\r\n}\r\n\r\n// ÊêúÁ¥¢ÂΩìÂâç‰π¶Á±ç‰∏≠ÁöÑËØçÊ±á\r\nexport function searchCurrentBookWords(query) {\r\n  if (!query || query.length === 0) return []\r\n  const currentBookWords = getCurrentBookWords()\r\n  const searchQuery = query.toLowerCase()\r\n  return currentBookWords.filter(word => \r\n    word.word.toLowerCase().includes(searchQuery) || \r\n    word.meaning.includes(query)\r\n  )\r\n}\r\n\r\n// Ëé∑ÂèñËØçÊÄßÁªüËÆ°\r\nexport function getWordsPosStats() {\r\n  const currentBookWords = getCurrentBookWords()\r\n  const stats = {}\r\n  \r\n  currentBookWords.forEach(word => {\r\n    const posName = posMap[word.pos] || word.pos\r\n    stats[posName] = (stats[posName] || 0) + 1\r\n  })\r\n  \r\n  return stats\r\n}\r\n\r\n// Ëé∑ÂèñÂ≠¶‰π†Âª∫ËÆÆ\r\nexport function getStudyRecommendation() {\r\n  const currentBookWords = getCurrentBookWords()\r\n  const learnedWords = getCurrentBookLearnedWords()\r\n  const wrongWords = getCurrentBookWrongWords()\r\n  \r\n  const total = currentBookWords.length\r\n  const learned = learnedWords.length\r\n  const wrong = wrongWords.length\r\n  \r\n  if (learned === 0) {\r\n    return {\r\n      type: 'start',\r\n      title: 'ÂºÄÂßãÂ≠¶‰π†',\r\n      description: 'Âª∫ËÆÆ‰ªéÂü∫Á°ÄËØçÊ±áÂºÄÂßãÂ≠¶‰π†',\r\n      action: 'ÂºÄÂßãÂ≠¶‰π†'\r\n    }\r\n  }\r\n  \r\n  if (wrong > 0) {\r\n    return {\r\n      type: 'review',\r\n      title: 'Â§ç‰π†ÈîôÈ¢ò',\r\n      description: `ÊÇ®Êúâ ${wrong} ‰∏™ËØçÊ±áÈúÄË¶ÅÂ§ç‰π†`,\r\n      action: 'Â§ç‰π†ÈîôÈ¢ò'\r\n    }\r\n  }\r\n  \r\n  if (learned / total < 0.8) {\r\n    return {\r\n      type: 'continue',\r\n      title: 'ÁªßÁª≠Â≠¶‰π†',\r\n      description: `Â∑≤Â≠¶‰π† ${learned}/${total} ‰∏™ËØçÊ±á`,\r\n      action: 'ÁªßÁª≠Â≠¶‰π†'\r\n    }\r\n  }\r\n  \r\n  return {\r\n    type: 'complete',\r\n    title: 'Â≠¶‰π†ÂÆåÊàê',\r\n    description: 'ÊÅ≠ÂñúÊÇ®ÂÆåÊàê‰∫ÜËØçÂÖ∏ÁöÑÂ≠¶‰π†ÔºÅ',\r\n    action: 'ÁªßÁª≠Â§ç‰π†'\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñËØçÊ±áÂàÜÈ°µÊï∞ÊçÆÔºàÁî®‰∫éÂ§ßÈáèËØçÊ±áÁöÑÂ±ïÁ§∫Ôºâ\r\nexport function getWordsByPage(page = 1, pageSize = 20) {\r\n  const currentBookWords = getCurrentBookWords()\r\n  const start = (page - 1) * pageSize\r\n  const end = start + pageSize\r\n  \r\n  return {\r\n    words: currentBookWords.slice(start, end),\r\n    total: currentBookWords.length,\r\n    page,\r\n    pageSize,\r\n    totalPages: Math.ceil(currentBookWords.length / pageSize)\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñËØçÂÖ∏ÁªüËÆ°‰ø°ÊÅØ\r\nexport function getDictionaryStats() {\r\n  const currentBookWords = getCurrentBookWords()\r\n  const learnedWords = getCurrentBookLearnedWords()\r\n  const wrongWords = getCurrentBookWrongWords()\r\n  \r\n  // ËØçÊÄßÁªüËÆ°\r\n  const posStats = getWordsPosStats()\r\n  \r\n  // Â≠¶‰π†ËøõÂ∫¶ÁªüËÆ°\r\n  const progressStats = {\r\n    total: currentBookWords.length,\r\n    learned: learnedWords.length,\r\n    wrong: wrongWords.length,\r\n    remaining: currentBookWords.length - learnedWords.length,\r\n    percentage: Math.round((learnedWords.length / currentBookWords.length) * 100)\r\n  }\r\n  \r\n  return {\r\n    posStats,\r\n    progressStats\r\n  }\r\n}\r\n\r\n// Ëé∑ÂèñÊé®ËçêÂ≠¶‰π†ÁöÑËØçÊ±áÔºàÂü∫‰∫éËØçÊÄßÂíåÂ≠¶‰π†ËøõÂ∫¶Ôºâ\r\nexport function getRecommendedWords(count = 20) {\r\n  const currentBookWords = getCurrentBookWords()\r\n  const learnedWordIds = getCurrentBookLearnedWords().map(w => w.id)\r\n  const wrongWordIds = getCurrentBookWrongWords().map(w => w.id)\r\n  \r\n  // ‰ºòÂÖàÊé®ËçêÈîôÈ¢ò\r\n  const unlearnedWords = currentBookWords.filter(word => \r\n    !learnedWordIds.includes(word.id)\r\n  )\r\n  \r\n  // Â¶ÇÊûúÊúâÈîôÈ¢òÔºå‰ºòÂÖàËøîÂõûÈîôÈ¢ò\r\n  if (wrongWordIds.length > 0) {\r\n    const wrongWords = currentBookWords.filter(word => wrongWordIds.includes(word.id))\r\n    return wrongWords.slice(0, count)\r\n  }\r\n  \r\n  // Âê¶ÂàôËøîÂõûÊú™Â≠¶‰π†ÁöÑËØçÊ±á\r\n  return unlearnedWords.slice(0, count)\r\n}\r\n\r\nexport { posMap } "],"names":["wordList","uni"],"mappings":"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"}